CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,      -- Auto-incrementing unique user ID
    username TEXT,          -- Required username
    email TEXT NOT NULL UNIQUE, -- Unique email
    user_firstname TEXT,             -- Optional first name
    user_lastname TEXT,              -- Optional last name
    user_avatar_url TEXT,            -- Optional profile picture URL
    password TEXT NOT NULL,     -- Hashed password storage
    date_registered TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Auto-filled registration date
);
ALTER TABLE users ADD COLUMN background_image_url TEXT;

CREATE POLICY "Enable insert for authenticated users"
ON storage.objects FOR INSERT
WITH CHECK (auth.role() = 'authenticated');

CREATE POLICY "Enable select for authenticated users"
ON storage.objects FOR SELECT
TO authenticated;

--Enable RLS on the bucket (required for policies) 
UPDATE storage.buckets SET public = false WHERE id ='user-avatars';

--Create a policy for uploads (example: authenticated users can upload)

CREATE POLICY "Allow authenticated uploads"
ON storage.objects
FOR INSERT
TO authenticated 
WITH CHECK (
  bucket_id = 'user-avatars' 
);
 
--Create a policy for reads (public or authenticated)
CREATE POLICY "Allow public reads" 
ON storage.objects 
FOR SELECT USING ( 
bucket_id = 'user-avatars'
); 

SELECT FROM storage.objects WHERE bucket_id = 'user-avatars';
